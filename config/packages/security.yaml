security:
  # Gestion des mots de passe
  password_hashers:
    Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: "auto"

  # Fournisseurs d'utilisateurs
  providers:
    # Utilisateur en mémoire (administrateur)
    users_in_memory:
      memory:
        users:
          admin:
            password: "$2y$13$UUF/Qm9QS.bknZv0kmvrXufAFLGJC9Qb5vK/Od80OLYWqa62YlZcK" # Mot de passe : admin
            roles: ["ROLE_ADMIN"]

  # Firewalls
  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false

    main:
      lazy: true
      provider: users_in_memory
      form_login:
        login_path: login
        check_path: login
      logout:
        path: logout
        target: /

  # Contrôle d'accès
  access_control:
    # Restreindre l'accès au back-office aux administrateurs
    - { path: ^/admin, roles: ROLE_ADMIN }
    # Exemple : restreindre l'accès à d'autres sections si nécessaire
    # - { path: ^/profile, roles: ROLE_USER }

when@test:
  security:
    password_hashers:
      # Réduction des coûts pour les tests
      Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
        algorithm: auto
        cost: 4 # Valeur minimale pour bcrypt
        time_cost: 3 # Valeur minimale pour argon
        memory_cost: 10 # Valeur minimale pour argon
